"data__n_4000__p_600__r_0.5__binthres_0__model_quadratic__distcens_unif__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_0__model_quadratic__distcens_weibull__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_0__model_quadratic__distcens_weibull__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_0__model_quadratic__distcens_weibull__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_0__model_quadratic__distcens_weibull__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_interaction__distcens_lnorm__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_interaction__distcens_lnorm__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_interaction__distcens_lnorm__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_interaction__distcens_lnorm__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_interaction__distcens_unif__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_interaction__distcens_unif__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_interaction__distcens_unif__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_interaction__distcens_unif__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_interaction__distcens_weibull__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_interaction__distcens_weibull__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_interaction__distcens_weibull__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_interaction__distcens_weibull__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_linear__distcens_lnorm__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_linear__distcens_lnorm__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_linear__distcens_lnorm__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_linear__distcens_lnorm__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_linear__distcens_unif__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_linear__distcens_unif__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_linear__distcens_unif__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_linear__distcens_unif__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_linear__distcens_weibull__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_linear__distcens_weibull__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_linear__distcens_weibull__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_linear__distcens_weibull__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_quadratic__distcens_lnorm__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_quadratic__distcens_lnorm__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_quadratic__distcens_lnorm__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_quadratic__distcens_lnorm__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_quadratic__distcens_unif__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_quadratic__distcens_unif__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_quadratic__distcens_unif__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_quadratic__distcens_unif__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_quadratic__distcens_weibull__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_quadratic__distcens_weibull__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_quadratic__distcens_weibull__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.5__binthres_-1__model_quadratic__distcens_weibull__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_interaction__distcens_lnorm__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_interaction__distcens_lnorm__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_interaction__distcens_lnorm__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_interaction__distcens_lnorm__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_interaction__distcens_unif__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_interaction__distcens_unif__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_interaction__distcens_unif__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_interaction__distcens_unif__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_interaction__distcens_weibull__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_interaction__distcens_weibull__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_interaction__distcens_weibull__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_interaction__distcens_weibull__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_linear__distcens_lnorm__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_linear__distcens_lnorm__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_linear__distcens_lnorm__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_linear__distcens_lnorm__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_linear__distcens_unif__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_linear__distcens_unif__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_linear__distcens_unif__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_linear__distcens_unif__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_linear__distcens_weibull__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_linear__distcens_weibull__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_linear__distcens_weibull__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_linear__distcens_weibull__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_quadratic__distcens_lnorm__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_quadratic__distcens_lnorm__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_quadratic__distcens_lnorm__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_quadratic__distcens_lnorm__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_quadratic__distcens_unif__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_quadratic__distcens_unif__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_quadratic__distcens_unif__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_quadratic__distcens_unif__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_quadratic__distcens_weibull__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_quadratic__distcens_weibull__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_quadratic__distcens_weibull__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_0__model_quadratic__distcens_weibull__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_interaction__distcens_lnorm__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_interaction__distcens_lnorm__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_interaction__distcens_lnorm__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_interaction__distcens_lnorm__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_interaction__distcens_unif__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_interaction__distcens_unif__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_interaction__distcens_unif__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_interaction__distcens_unif__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_interaction__distcens_weibull__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_interaction__distcens_weibull__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_interaction__distcens_weibull__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_interaction__distcens_weibull__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_linear__distcens_lnorm__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_linear__distcens_lnorm__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_linear__distcens_lnorm__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_linear__distcens_lnorm__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_linear__distcens_unif__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_linear__distcens_unif__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_linear__distcens_unif__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_linear__distcens_unif__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_linear__distcens_weibull__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_linear__distcens_weibull__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_linear__distcens_weibull__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_linear__distcens_weibull__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_quadratic__distcens_lnorm__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_quadratic__distcens_lnorm__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_quadratic__distcens_lnorm__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_quadratic__distcens_lnorm__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_quadratic__distcens_unif__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_quadratic__distcens_unif__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_quadratic__distcens_unif__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_quadratic__distcens_unif__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_quadratic__distcens_weibull__method_PCSH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_quadratic__distcens_weibull__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_quadratic__distcens_weibull__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0.8__binthres_-1__model_quadratic__distcens_weibull__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_interaction__distcens_lnorm__method_PCSH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_interaction__distcens_lnorm__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_interaction__distcens_lnorm__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_interaction__distcens_lnorm__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_interaction__distcens_unif__method_PCSH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_interaction__distcens_unif__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_interaction__distcens_unif__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_interaction__distcens_unif__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_interaction__distcens_weibull__method_PCSH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_interaction__distcens_weibull__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_interaction__distcens_weibull__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_interaction__distcens_weibull__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_linear__distcens_lnorm__method_PCSH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_linear__distcens_lnorm__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_linear__distcens_lnorm__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_linear__distcens_lnorm__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_linear__distcens_unif__method_PCSH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_linear__distcens_unif__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_linear__distcens_unif__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_linear__distcens_unif__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_linear__distcens_weibull__method_PCSH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_linear__distcens_weibull__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_linear__distcens_weibull__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_linear__distcens_weibull__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_quadratic__distcens_lnorm__method_PCSH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_quadratic__distcens_lnorm__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_quadratic__distcens_lnorm__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_quadratic__distcens_lnorm__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_quadratic__distcens_unif__method_PCSH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_quadratic__distcens_unif__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_quadratic__distcens_unif__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_quadratic__distcens_unif__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_quadratic__distcens_weibull__method_PCSH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_quadratic__distcens_weibull__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_quadratic__distcens_weibull__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_0__model_quadratic__distcens_weibull__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_interaction__distcens_lnorm__method_PCSH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_interaction__distcens_lnorm__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_interaction__distcens_lnorm__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_interaction__distcens_lnorm__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_interaction__distcens_unif__method_PCSH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_interaction__distcens_unif__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_interaction__distcens_unif__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_interaction__distcens_unif__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_interaction__distcens_weibull__method_PCSH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_interaction__distcens_weibull__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_interaction__distcens_weibull__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_interaction__distcens_weibull__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_linear__distcens_lnorm__method_PCSH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_linear__distcens_lnorm__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_linear__distcens_lnorm__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_linear__distcens_lnorm__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_linear__distcens_unif__method_PCSH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_linear__distcens_unif__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_linear__distcens_unif__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_linear__distcens_unif__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_linear__distcens_weibull__method_PCSH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_linear__distcens_weibull__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_linear__distcens_weibull__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_linear__distcens_weibull__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_quadratic__distcens_lnorm__method_PCSH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_quadratic__distcens_lnorm__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_quadratic__distcens_lnorm__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_quadratic__distcens_lnorm__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_quadratic__distcens_unif__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_quadratic__distcens_unif__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_quadratic__distcens_unif__prev0_0.5__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_quadratic__distcens_weibull__method_PCSH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_quadratic__distcens_weibull__prev0_0.05__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_quadratic__distcens_weibull__prev0_0.2__method_PSDH.Rdata",
"data__n_4000__p_600__r_0__binthres_-1__model_quadratic__distcens_weibull__prev0_0.5__method_PSDH.Rdata")
rm(list=ls())
# Load libraries
library(data.table)
# Set paths
homelaptop = "/Users/nilotpalsanyal/Dropbox/Statistics/Research_Nil/Project-09-GbyE/"
worklaptop = "/Users/nsanyal/Dropbox/Statistics/Research_Nil/Project-09-GbyE/"
sherlock = "/home/users/nsanyal/Project-09-GbyE/"
if(dir.exists(homelaptop)) HOME = homelaptop else if(dir.exists(worklaptop)) HOME = worklaptop else if(dir.exists(sherlock)) HOME = sherlock
CGEN.DIRNAME = c( "CGEN-Bioconductor/", "CGEN-Matthieu/", "CGEN-Nilotpal/" )[3]
OUT.PATH = paste0( HOME, CGEN.DIRNAME, "R/Analysis_scripts_Nilotpal/Nilotpal_Simulation_analysis/" )
# Read type I error analysis results (under violation of GXE independence) and combine
Pg = c(0.3,0.1,0.05)
MRR.E = c(1.5,2.5,3.0,3.5)
RERI = c("0")
model = c("trend")
viol.parm.2 = c("-log2","-log1.95","-log1.9","-log1.85","-log1.8","-log1.75","-log1.7","-log1.65","-log1.6","-log1.55","-log1.5","-log1.45","-log1.4","-log1.35","-log1.3","-log1.25","-log1.2","-log1.15","-log1.1","-log1.05","-log1.04","-log1.03","-log1.02","-log1.01","log1","log1.01","log1.02","log1.03","log1.04","log1.05","log1.05","log1.1","log1.15","log1.2","log1.25","log1.3","log1.35","log1.4","log1.45","log1.5","log1.55","log1.6","log1.65","log1.7","log1.75","log1.8","log1.85","log1.9","log1.95","log2")
prev = c(0.01,0.1)
thresh = c(0.005,0.001,0.0005,0.0001)
variable = c("pval.addF.Wald.trend","pval.addT.Wald.CML.trend","pval.addT.Wald.EB.trend")
M = array( NA, dim = sapply( list(Pg, MRR.E, viol.parm.2, prev, thresh, variable), length ), dimnames = list(Pg, MRR.E, viol.parm.2, prev, thresh, variable) )
for(i in seq(Pg) )
for(j in seq(MRR.E) )
for(k in seq(viol.parm.2))
for(l in seq(prev))
{
filename = paste0("SimulationResults_Nilotpal_trend_Pg_",Pg[i],"_MRR.E_",MRR.E[j],"_RERI_0_prev_",prev[l],"_indep_violate_",viol.parm.2[k],".csv")
allfiles = list.files( paste0(OUT.PATH, "Output/for_revision1/type1err"), recursive = T, full.names = T )
auxfile = grep( filename, allfiles, value = T )
if(length(auxfile)!=0) aux.indep = fread(auxfile)[,-1] else next
for(m in seq(thresh))
M[i,j,k,l,m,] =  aux.indep[, sapply( .SD, function(x){log10( mean(x<thresh[m],na.rm=T)/thresh[m] )} ), .SDcols = variable ]
}
pdf("/Users/nsanyal/Dropbox/Statistics/Research_Nil/Project-09-GbyE/CGEN-Nilotpal/R/Analysis_scripts_Nilotpal/Nilotpal_Simulation_analysis/Type-I-error-comparison-Set5.pdf", width = 28, height = 10)
par(mfrow = c(4,3), mar = c(4,7,2,0.5))
ylim = range(M[ , 1, ,2, 1,], na.rm = T)
for(i in seq(MRR.E))
for(j in seq(Pg) )
{
# th = thresh[4]
viol = sapply( paste0( gsub("log","log(", viol.parm.2), ")" ), function(x) eval(parse(text=x)) )
plot( x = viol, y = M[ j, i, ,2, 1, 3 ], xlab = "G-E dependence", ylab = expression(paste("log10( type I error / ",alpha," )")), ylim = ylim, type = "l", lty = 1, las = 2, xaxt = "n" ) #, main = substitute( paste( alpha, " = ", th ), list(th = th) ) )
lines( x = viol, y = M[ j, i, ,2, 1, 1 ], lty = 2 )
lines( x = viol, y = M[ j, i, ,2, 1, 2 ], lty = 3 )
axis( side = 1, at = viol, labels = F )
text( x = viol, y = par("usr")[3]-.32, labels = viol.parm.2, xpd = NA, srt = 90, adj = .9, cex = 0.8 )
# mtext( switch( j, "A)", "B)", "C)", "D)" ), side = 3, line = 1, adj = -0.07, cex = .8 )
if(j==1) legend( x = "topright", legend = c("UML-trend","CML-trend","EB-trend"), lty = c(2,3,1))
}
dev.off()
49*3
294+36
3264/6
c(3264,2448)/6
c(3264,2448)/12
c(3264,2448)/24
c(3264,2448)/48
c(3264,2448)/48/17
48*17
c(4,3)*408
?cph
library(FGR)
library(pec)
library(riskRegression)
?cph
?coxph
13.71+19.63+22.52+1.69+14.62+7.65+19.44+7.96+13.54+10.60+10.13
13.63/5.04
7.73/2.704365
rm(list=ls())
# Load libraries
library(data.table)
# Set paths
homelaptop = "/Users/nilotpalsanyal/Dropbox/Statistics/Research_Nil/Project-09-GbyE/"
worklaptop = "/Users/nsanyal/Dropbox/Statistics/Research_Nil/Project-09-GbyE/"
sherlock = "/home/users/nsanyal/Project-09-GbyE/"
if(dir.exists(homelaptop)) HOME = homelaptop else if(dir.exists(worklaptop)) HOME = worklaptop else if(dir.exists(sherlock)) HOME = sherlock
CGEN.DIRNAME = c( "CGEN-Bioconductor/", "CGEN-Matthieu/", "CGEN-Nilotpal/" )[3]
OUT.PATH = paste0( HOME, CGEN.DIRNAME, "R/Analysis_scripts_Nilotpal/Nilotpal_Simulation_analysis/" )
# Read type I error analysis results (under violation of GXE independence) and combine
Pg = c(0.3)
MRR.E = c(1.5)
RERI = c("0")
model = c("trend")
viol.parm.2 = c("-log2","-log1.95","-log1.9","-log1.85","-log1.8","-log1.75","-log1.7","-log1.65","-log1.6","-log1.55","-log1.5","-log1.45","-log1.4","-log1.35","-log1.3","-log1.25","-log1.2","-log1.15","-log1.1","-log1.05","-log1.04","-log1.03","-log1.02","-log1.01","log1","log1.01","log1.02","log1.03","log1.04","log1.05","log1.05","log1.1","log1.15","log1.2","log1.25","log1.3","log1.35","log1.4","log1.45","log1.5","log1.55","log1.6","log1.65","log1.7","log1.75","log1.8","log1.85","log1.9","log1.95","log2")
prev = c(0.01)
thresh = c(0.005,0.001,0.0005,0.0001)
variable = c("pval.addF.Wald.trend","pval.addT.Wald.CML.trend","pval.addT.Wald.EB.trend")
M = array( NA, dim = sapply( list(Pg, MRR.E, viol.parm.2, prev, thresh, variable), length ), dimnames = list(Pg, MRR.E, viol.parm.2, prev, thresh, variable) )
for(i in seq(Pg) )
for(j in seq(MRR.E) )
for(k in seq(viol.parm.2))
for(l in seq(prev))
{
filename = paste0("SimulationResults_Nilotpal_trend_Pg_",Pg[i],"_MRR.E_",MRR.E[j],"_RERI_0_prev_",prev[l],"_indep_violate_",viol.parm.2[k],".csv")
allfiles = list.files( paste0(OUT.PATH, "Output/for_revision1/type1err/Set7/"), recursive = T, full.names = T )
auxfile = grep( filename, allfiles, value = T )
if(length(auxfile)!=0) aux.indep = fread(auxfile)[,-1] else next
for(m in seq(thresh))
M[i,j,k,l,m,] =  aux.indep[, sapply( .SD, function(x){log10( mean(x<thresh[m],na.rm=T)/thresh[m] )} ), .SDcols = variable ]
}
dim(M)
M
length(viol.parm.2)
M
dim(M)
M[1,1,,1,1,1]
for(i in seq(Pg) )
for(j in seq(MRR.E) )
for(k in seq(viol.parm.2))
for(l in seq(prev))
{
filename = paste0("SimulationResults_Nilotpal_trend_Pg_",Pg[i],"_MRR.E_",MRR.E[j],"_RERI_0_prev_",prev[l],"_indep_violate_",viol.parm.2[k],".csv")
allfiles = list.files( paste0(OUT.PATH, "Output/for_revision2/type1err/"), recursive = T, full.names = T )
auxfile = grep( filename, allfiles, value = T )
if(length(auxfile)!=0) aux.indep = fread(auxfile)[,-1] else next
for(m in seq(thresh))
M[i,j,k,l,m,] =  aux.indep[, sapply( .SD, function(x){log10( mean(x<thresh[m],na.rm=T)/thresh[m] )} ), .SDcols = variable ]
}
dim(M)
for(i in seq(Pg) )
for(j in seq(MRR.E) )
for(k in seq(viol.parm.2))
for(l in seq(prev))
{
filename = paste0("SimulationResults_Nilotpal_trend_Pg_",Pg[i],"_MRR.E_",MRR.E[j],"_RERI_0_prev_",prev[l],"_indep_violate_",viol.parm.2[k],".csv")
allfiles = list.files( paste0(OUT.PATH, "Output/for_revision2/type1err/Set7/"), recursive = T, full.names = T )
auxfile = grep( filename, allfiles, value = T )
if(length(auxfile)!=0) aux.indep = fread(auxfile)[,-1] else next
for(m in seq(thresh))
M[i,j,k,l,m,] =  aux.indep[, sapply( .SD, function(x){log10( mean(x<thresh[m],na.rm=T)/thresh[m] )} ), .SDcols = variable ]
}
pdf("/Users/nsanyal/Dropbox/Statistics/Research_Nil/Project-09-GbyE/CGEN-Nilotpal/R/Analysis_scripts_Nilotpal/Nilotpal_Simulation_analysis/Type-I-error-comparison-Set7.pdf", width = 12, height = 15)
par(mfrow = c(length(thresh),1), mar = c(4,7,2,0.5))
ylim = range(M[ , 1, ,1, ,], na.rm = T)
for(i in seq(Pg) )
for(j in seq(thresh))
{
th = thresh[j]
viol = sapply( paste0( gsub("log","log(", viol.parm.2), ")" ), function(x) eval(parse(text=x)) )
plot( x = viol, y = M[ i, 1, ,1, j, 3 ], xlab = "G-E dependence", ylab = expression(paste("log10( type I error / ",alpha," )")), ylim = ylim, type = "l", lty = 1, las = 2, xaxt = "n" ) #, main = substitute( paste( alpha, " = ", th ), list(th = th) ) )
lines( x = viol, y = M[ i, 1, ,1, j, 1 ], lty = 2 )
lines( x = viol, y = M[ i, 1, ,1, j, 2 ], lty = 3 )
axis( side = 1, at = viol, labels = F )
text( x = viol, y = par("usr")[3]-.15, labels = viol.parm.2, xpd = NA, srt = 90, adj = .9, cex = 0.8 )
mtext( switch( j, "A)", "B)", "C)", "D)" ), side = 3, line = 1, adj = -0.07, cex = .8 )
if(j==1) legend( x = "topright", legend = c("UML-trend","CML-trend","EB-trend"), lty = c(2,3,1))
}
dev.off()
186.05+4.16
190.21-173.38
pi
a=14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196442881097566593344612847564823378678316527120190914564856692346034861045432664821339360726024914127372458700660631558817488152092096282925409171536436789259036001133053054882046652138414695194151160943305727036575959195309218611738193261179310511854807446237996274956735188575272489122793818301194912983367336244065664308602139494639522473719070217986094370277
a
as.numeric(strsplit(as.character(a), "")[[1]])
a=
as.numeric(strsplit(as.character("14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196442881097566593344612847564823378678316527120190914564856692346034861045432664821339360726024914127372458700660631558817488152092096282925409171536436789259036001133053054882046652138414695194151160943305727036575959195309218611738193261179310511854807446237996274956735188575272489122793818301194912983367336244065664308602139494639522473719070217986094370277"), "")[[1]])
as.numeric(strsplit(as.character("14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196442881097566593344612847564823378678316527120190914564856692346034861045432664821339360726024914127372458700660631558817488152092096282925409171536436789259036001133053054882046652138414695194151160943305727036575959195309218611738193261179310511854807446237996274956735188575272489122793818301194912983367336244065664308602139494639522473719070217986094370277"), "")[[1]])
a = as.numeric(strsplit(as.character("14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196442881097566593344612847564823378678316527120190914564856692346034861045432664821339360726024914127372458700660631558817488152092096282925409171536436789259036001133053054882046652138414695194151160943305727036575959195309218611738193261179310511854807446237996274956735188575272489122793818301194912983367336244065664308602139494639522473719070217986094370277"), "")[[1]])
a
table(a)
length(a)
hist(table(a))
hist(table(a))
barplot(table(a))
a = as.numeric(strsplit(as.character("14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812"), "")[[1]])
length(a)
a = as.numeric(strsplit(as.character("14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230"), "")[[1]])
length(a)
a = as.numeric(strsplit(as.character("14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706"), "")[[1]])
length(a)
a = as.numeric(strsplit(as.character("1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679"), "")[[1]])
length(a)
barplot(table(a))
a = as.numeric(strsplit(as.character("3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982148086513282306647093844609550582231725359408128481117450284102701938521105559644622948954930381964428810975665933446128475648233786783165271201909145648566923460348610454326648213393607260249141273724587006606315588174881520920962829254091715364367892590360011330530548820466521384146951941511609433057270365759591953092186117381932611793105118548074462379962749567351885752724891227938183011949129833673362440656643086021394946395224737190702179860943702770539217176293176752384674818467669405132000568127145263560827785771342757789609173637178721468440901224953430146549585371050792279689258923542019956112129021960864034418159813629774771309960518707211349999998372978049951059731732816096318595024459455346908302642522308253344685035261931188171010003137838752886587533208381420617177669147303598253490428755468731159562863882353787593751957781857780532171226806613001927876611195909216420198938095257201065485863278865936153381827968230301952035301852968995773622599413891249721775283479131515574857242454150695950829533116861727855889075098381754637464939319255060400927701671139009848824012858361603563707660104710181942955596198946767837449"), "")[[1]])
a = as.numeric(strsplit(as.character("3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982148086513282306647093844609550582231725359408128481117450284102701938521105559644622948954930381964428810975665933446128475648233786783165271201909145648566923460348610454326648213393607260249141273724587006606315588174881520920962829254091715364367892590360011330530548820466521384146951941511609433057270365759591953092186117381932611793105118548074462379962749567351885752724891227938183011949129833673362440656643086021394946395224737190702179860943702770539217176293176752384674818467669405132000568127145263560827785771342757789609173637178721468440901224953430146549585371050792279689258923542019956112129021960864034418159813629774771309960518707211349999998372978049951059731732816096318595024459455346908302642522308253344685035261931188171010003137838752886587533208381420617177669147303598253490428755468731159562863882353787593751957781857780532171226806613001927876611195909216420198938095257201065485863278865936153381827968230301952035301852968995773622599413891249721775283479131515574857242454150695950829533116861727855889075098381754637464939319255060400927701671139009848824012858361603563707660104710181942955596198946767837449"), "")[[1]])
length(a)
barplot(table(a))
a = as.numeric(strsplit(as.character("3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409"), "")[[1]])
length(a)
a = as.numeric(strsplit(as.character("3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982148086513282306647093844609550582231725"), "")[[1]])
a = as.numeric(strsplit(as.character("14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196442881097566593344612847564823378678316527120190914564856692346034861045432664821339360726024914127372458700660631558817488152092096282925409171536436789259036001133053054882046652138414695194151160943305727036575959195309218611738193261179310511854807446237996274956735188575272489122793818301194912983367336244065664308602139494639522473719070217986094370277"), "")[[1]])
a = as.numeric(strsplit(as.character("141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982148086513282306647093844609550582231725359408128481117450284102701938521105559644622948954930381964428810975665933446128475648233786783165271201909145648566923460348610454326648213393607260249141273724587006606315588174881520920962829254091715364367892590360011330530548820466521384146951941511609433057270365759591953092186117381932611793105118548074462379962749567351885752724891227938183011949129833673362440656643086021394946395224737190702179860943702770539217176293176752384674818467669405132000568127145263560827785771342757789609173637178721468440901224953430146549585371050792279689258923542019956112129021960864034418159813629774771309960518707211349999998372978049951059731732816096318595024459455346908302642522308253344685035261931188171010003137838752886587533208381420617177669147303598253490428755468731159562863882353787593751957781857780532171226806613001927876611195909216420198938095257201065485863278865936153381827968230301952035301852968995773622599413891249721775283479131515574857242454150695950829533116861727855889075098381754637464939319255060400927701671139009848824012858361603563707660104710181942955596198946767837449"), "")[[1]])
length(a)
barplot(table(a))
a = as.numeric(strsplit(as.character("1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632788659361533818279682303019520353018529689957736225994138912497217752834791315155748572424541506959508295331168617278558890750983817546374649393192550604009277016711390098488240128583616035637076601047101819429555961989467678374494482553797747268471040475346462080466842590694912933136770289891521047521620569660240580381501935112533824300355876402474964732639141992726042699227967823547816360093417216412199245863150302861829745557067498385054945885869269956909272107975093029553211653449872027559602364806654991198818347977535663698074265425278625518184175746728909777727938000816470600161452491921732172147723501414419735685481613611573525521334757418494684385233239073941433345477624168625189835694855620992192221842725502542568876717904946016534668049886272327917860857843838279679766814541009538837863609506800642251252051173929848960841284886269456042419652850222106611863067442786220391949450471237137869609563643719172874677646575739624138908658326459958133904780275900994657640789512694683983525957098258226205224894077267194782684826014769909026401363944374553050682034962524517493996514314298091906592509372216964615157098583874105978859597729754989301617539284681382686838689427741559918559252459539594310499725246808459872736446958486538367362226260991246080512438843904512441365497627807977156914359977001296160894416948685558484063534220722258284886481584560285060168427394522674676788952521385225499546667278239864565961163548862305774564980355936345681743241125150760694794510965960940252288797108931456691368672287489405601015033086179286809208747609178249385890097149096759852613655497818931297848216829989487226588048575640142704775551323796414515237462343645428584447952658678210511413547357395231134271661021359695362314429524849371871101457654035902799344037420073105785390621983874478084784896833214457138687519435064302184531910484810053706146806749192781911979399520614196634287544406437451237181921799983910159195618146751426912397489409071864942319615679452080951465502252316038819301420937621378559566389377870830390697920773467221825625996615014215030680384477345492026054146659252014974428507325186660021324340881907104863317346496514539057962685610055081066587969981635747363840525714591028970641401109712062804390397595156771577004203378699360072305587631763594218731251471205329281918261861258673215791984148488291644706095752706957220917567116722910981690915280173506712748583"), "")[[1]])
length(a)
barplot(table(a))
a = as.numeric(strsplit(as.character("14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196442881097566593344612847564823378678316527120190914564856692346034861045432664821339360726024914127372458700660631558817488152092096282925409171536436789259036001133053054882046652138414695194151160943305727036575959195309218611738193261179310511854807446237996274956735188575272489122793818301194912983367336244065664308602139494639522473719070217986094370277053921717629317675238467481846766940513200056812714526356082778577134275778960917363717872146844090122495343014654958537105079227968925892354201995611212902196086403441815981362977477130996051870721134999999837297804995105973173281609631859502445945534690830264252230825334468503526193118817101000313783875288658753320838142061717766914730359825349042875546873115956286388235378759375195778185778053217122680661300192787661119590921642019893809525720106548586327886593615338182796823030195203530185296899577362259941389124972177528347913151557485724245415069595082953311686172785588907509838175463746493931925506040092770167113900984882401285836160356370766010471018194295559619894676783744944825537977472684710404753464620804668425906949129331367702898915210475216205696602405803815019351125338243003558764024749647326391419927260426992279678235478163600934172164121992458631503028618297455570674983850549458858692699569092721079750930295532116534498720275596023648066549911988183479775356636980742654252786255181841757467289097777279380008164706001614524919217321721477235014144197356854816136115735255213347574184946843852332390739414333454776241686251898356948556209921922218427255025425688767179049460165346680498862723279178608578438382796797668145410095388378636095068006422512520511739298489608412848862694560424196528502221066118630674427862203919494504712371378696095636437191728746776465757396241389086583264599581339047802759009946576407895126946839835259570982582262052248940772671947826848260147699090264013639443745530506820349625245174939965143142980919065925093722169646151570985838741059788595977297549893016175392846813826868386894277415599185592524595395943104997252468084598727364469584865383673622262609912460805124388439045124413654976278079771569143599770012961608944169486855584840635342207222582848864815845602850601684273945226746767889525213852254995466672782398645659611635488623057745649803559363456817432411251507606947945109659609402522887971089314566913686722874894056010150330861792868092087476091782493858900971490967598526136554978189312978482168299894872265880485756401427047755513237964145152374623436454285844479526586782105114135473573952311342716610213596953623144295248493718711014576540359027993440374200731057853906219838744780847848968332144571386875194350643021845319104848100537061468067491927819119793995206141966342875444064374512371819217999839101591956181467514269123974894090718649423196156794520809514655022523160388193014209376213785595663893778708303906979207734672218256259966150142150306803844773454920260541466592520149744285073251866600213243408819071048633173464965145390579626856100550810665879699816357473638405257145910289706414011097120628043903975951567715770042033786993600723055876317635942187312514712053292819182618612586732157919841484882916447060957527069572209175671167229109816909152801735067127485832228718352093539657251210835791513698820914442100675103346711031412671113699086585163983150197016515116851714376576183515565088490998985998238734552833163550764791853589322618548963213293308985706420467525907091548141654985946163718027098199430992448895757128289059232332609729971208443357326548938239119325974636673058360414281388303203824903758985243744170291327656180937734440307074692112019130203303801976211011004492932151608424448596376698389522868478312355265821314495768572624334418930396864262434107732269780280731891544110104468232527162010526522721116603966655730925471105578537634668206531098965269186205647693125705863566201855810072936065987648611791045334885034611365768675324944166803962657978771855608455296541266540853061434443185867697514566140680070023787765913440171274947042056223053899456131407112700040785473326993908145466464588079727082668306343285878569830523580893306575740679545716377525420211495576158140025012622859413021647155097925923099079654737612551765675135751782966645477917450112996148903046399471329621073404375189573596145890193897131117904297828564750320319869151402870808599048010941214722131794764777262241425485454033215718530614228813758504306332175182979866223717215916077166925474873898665494945011465406284336639379003976926567214638530673609657120918076383271664162748888007869256029022847210403172118608204190004229661711963779213375751149595015660496318629472654736425230817703675159067350235072835405670403867435136222247715891504953098444893330963408780769325993978054193414473774418426312986080998886874132604721569516239658645730216315981931951673538129741677294786724229246543668009806769282382806899640048243540370141631496589794092432378969070697794223625082216889573837986230015937764716512289357860158816175578297352334460428151262720373431465319777741603199066554187639792933441952154134189948544473456738316249934191318148092777710386387734317720754565453220777092120190516609628049092636019759882816133231666365286193266863360627356763035447762803504507772355471058595487027908143562401451718062464362679456127531813407833033625423278394497538243720583531147711992606381334677687969597030983391307710987040859133746414428227726346594704745878477872019277152807317679077071572134447306057007334924369311383504931631284042512192565179806941135280131470130478164378851852909285452011658393419656213491434159562586586557055269049652098580338507224264829397285847831630577775606888764462482468579260395352773480304802900587607582510474709164396136267604492562742042083208566119062545433721315359584506877246029016187667952406163425225771954291629919306455377991403734043287526288896399587947572917464263574552540790914513571113694109119393251910760208252026187985318877058429725916778131496990090192116971737278476847268608490033770242429165130050051683233643503895170298939223345172201381280696501178440874519601212285993716231301711444846409038906449544400619869075485160263275052983491874078668088183385102283345085048608250393021332197155184306354550076682829493041377655279397517546139539846833936383047461199665385815384205685338621867252334028308711232827892125077126294632295639898989358211674562701021835646220134967151881909730381198004973407239610368540664319395097901906996395524530054505806855019567302292191393391856803449039820595510022635353619204199474553859381023439554495977837790237421617271117236434354394782218185286240851400666044332588856986705431547069657474585503323233421073015459405165537906866273337995851156257843229882737231989875714159578111963583300594087306812160287649628674460477464915995054973742562690104903778198683593814657412680492564879855614537234786733039046883834363465537949864192705638729317487233208376011230299113679386270894387993620162951541337142489283072201269014754668476535761647737946752004907571555278196536213239264061601363581559074220202031872776052772190055614842555187925303435139844253223415762336106425063904975008656271095359194658975141310348227693062474353632569160781547818115284366795706110861533150445212747392454494542368288606134084148637767009612071512491404302725386076482363414334623518975766452164137679690314950191085759844239198629164219399490723623464684411739403265918404437805133389452574239950829659122850855582157250310712570126683024029295252201187267675622041542051618416348475651699981161410100299607838690929160302884002691041407928862150784245167090870006992821206604183718065355672525325675328612910424877618258297651579598470356222629348600341587229805349896502262917487882027342092222453398562647669149055628425039127577102840279980663658254889264880254566101729670266407655904290994568150652653053718294127033693137851786090407086671149655834343476933857817113864558736781230145876871266034891390956200993936103102916161528813843790990423174733639480457593149314052976347574811935670911013775172100803155902485309066920376719220332290943346768514221447737939375170344366199104033751117354719185504644902636551281622882446257591633303910722538374218214088350865739177150968288747826569959957449066175834413752239709683408005355984917541738188399944697486762655165827658483588453142775687900290951702835297163445621296404352311760066510124120065975585127617858"), "")[[1]])
length(a)
)
casc
s
csa
cas
c
sa
"
barplot(table(a))
a = as.numeric(strsplit(as.character(""), "")[[1]])
length(a)
barplot(table(a))
86.9/11.6
9.98/1.33
$175*70
175*70
300/12
300/16
29+25+17+30+18
10+10+12+10+13+9
2339+2339+2135.14+1907.48+2145.48+9000
2135+1907+2145
2383+2372+1908
2194+2204+2204
2135+1907+2145
2339*2
3018+3032+3032
1876+1876+1867+2
2085+1773+2075+2
2194+2204+2048+1
2205+2204+2194+1
2383+2194+2204+1
2205+2204+2015+1
3018+3032+3032+2
10276+12326
12668*2
12326*2
13696*2
755/5
35mi $4
library(CoxBoost)
?CoxBoost
CoxBoost
28+24+15
4630+1630+430+1100
4630+1630+430
2021-1954
26114-13654
87-54
500000 * 6.25/10
500000 * 6.25/100
31250/12
2556*6+2641*6
500000 * 7/100
1000000 * 6.75/100 /12
900000 * 6.75/100 /12
1000000 * 6.75/100 /12
1000000 * 6.75/100 /12
1000000 * 6.25/100 /12
1000000 * 6.55/100 /12
65/400*1000
197955/164.9625
1.57/6/4
10000 * 0.06541667
654.1667/7
93/10000*100
94.9437*1200
86722-84790
10000 * 1500/100
# Create Rmd html result
rm(list=ls())
dir = "/Users/nsanyal/Dropbox/MyPassport/Documents/GitHub/swami-vivekananda-quotes-authentic.github.io"
setwd(dir)
library(rmarkdown)
render( input="index.Rmd" )
# Create Rmd html result
rm(list=ls())
dir = "/Users/nsanyal/Dropbox/MyPassport/Documents/GitHub/swami-vivekananda-quotes-authentic.github.io"
setwd(dir)
library(rmarkdown)
render( input="index.Rmd" )
# Create Rmd html result
rm(list=ls())
dir = "/Users/nsanyal/Dropbox/MyPassport/Documents/GitHub/swami-vivekananda-quotes-authentic.github.io"
setwd(dir)
library(rmarkdown)
render( input="index.Rmd" )
rm(list=ls())
dir = "/Users/nsanyal/Dropbox/MyPassport/Documents/GitHub/saradadeviquotes.github.io"
setwd(dir)
library(rmarkdown)
render( input="index.Rmd" )
rm(list=ls())
dir = "/Users/nsanyal/Dropbox/MyPassport/Documents/GitHub/swami-vivekananda-quotes-authentic.github.io"
setwd(dir)
library(rmarkdown)
render( input="index.Rmd" )
rm(list=ls())
dir = "/Users/nsanyal/Dropbox/MyPassport/Documents/GitHub/swami-vivekananda-quotes-authentic.github.io"
setwd(dir)
library(rmarkdown)
render( input="index.Rmd" )
rm(list=ls())
dir = "/Users/nsanyal/Dropbox/MyPassport/Documents/GitHub/swami-vivekananda-quotes-authentic.github.io"
setwd(dir)
library(rmarkdown)
render( input="index.Rmd" )
rm(list=ls())
dir = "/Users/nsanyal/Dropbox/MyPassport/Documents/GitHub/swami-vivekananda-quotes-authentic.github.io"
setwd(dir)
library(rmarkdown)
render( input="index.Rmd" )
rm(list=ls())
dir = "/Users/nsanyal/Dropbox/MyPassport/Documents/GitHub/swami-vivekananda-quotes-authentic.github.io"
setwd(dir)
library(rmarkdown)
render( input="index.Rmd" )
rm(list=ls())
dir = "/Users/nsanyal/Dropbox/MyPassport/Documents/GitHub/swami-vivekananda-quotes-authentic.github.io"
setwd(dir)
library(rmarkdown)
render( input="index.Rmd" )
rm(list=ls())
dir = "/Users/nsanyal/Dropbox/MyPassport/Documents/GitHub/swami-vivekananda-quotes-authentic.github.io"
setwd(dir)
library(rmarkdown)
render( input="index.Rmd" )
3999+824.82+3599.10
rm(list=ls())
dir = "/Users/nsanyal/Dropbox/MyPassport/Documents/GitHub/swami-vivekananda-quotes-authentic.github.io"
setwd(dir)
library(rmarkdown)
render( input="index.Rmd" )
rm(list=ls())
dir = "/Users/nsanyal/Dropbox/MyPassport/Documents/GitHub/swami-vivekananda-quotes-authentic.github.io"
setwd(dir)
library(rmarkdown)
render( input="index.Rmd" )
render( input="index.Rmd" )
